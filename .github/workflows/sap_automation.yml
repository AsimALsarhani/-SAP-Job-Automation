# .github/workflows/sap_automation.yml
name: SAP Automation

on:
  schedule:
    - cron: "0 * * * *"  # Hourly execution
  workflow_dispatch:      # Manual trigger

jobs:
  execute-job:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated checkout action version

      - name: Set up Python 3.10
        uses: actions/setup-python@v5 # Updated setup-python action version
        with:
          python-version: '3.10'

      - name: Install Google Chrome and dependencies
        run: |
          sudo apt-get update
          # Install Chrome and jq (for parsing JSON)
          sudo apt-get install -y google-chrome-stable jq

      - name: Install ChromeDriver using Chrome for Testing API
        run: |
          # Get installed Chrome version
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          echo "Installed Chrome version: $CHROME_VERSION"

          # Get the corresponding ChromeDriver version using the new JSON API
          # Fetches the latest known good version for stable channel
          CHROMEDRIVER_URL=$(curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json | jq -r '.channels.Stable.downloads.chromedriver[] | select(.platform=="linux64") | .url')

          if [ -z "$CHROMEDRIVER_URL" ]; then
            echo "Could not automatically determine ChromeDriver URL. Exiting."
            exit 1
          fi

          echo "ChromeDriver download URL: $CHROMEDRIVER_URL"

          # Download, unzip, and install ChromeDriver
          wget -N "$CHROMEDRIVER_URL" -O chromedriver_linux64.zip
          unzip chromedriver_linux64.zip -d . # Unzip to current directory
          # The zip file often contains a directory like chromedriver-linux64/
          # Adjust the path if needed based on the actual zip structure
          # Check if the specific directory exists before moving
          if [ -d "chromedriver-linux64" ]; then
             sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          else
             echo "WARN: Expected directory 'chromedriver-linux64' not found after unzip. Trying to move 'chromedriver' directly."
             # Fallback: Attempt to move if chromedriver is in the root of the zip
             if [ -f "chromedriver" ]; then
               sudo mv chromedriver /usr/bin/chromedriver
             else
               echo "ERROR: Could not find 'chromedriver' binary after unzip."
               # List files for debugging
               ls -la
               exit 1
             fi
          fi

          sudo chmod +x /usr/bin/chromedriver
          rm chromedriver_linux64.zip # Clean up zip file
          # Optional: remove the extracted folder if it exists and you only moved the binary
          rm -rf chromedriver-linux64

          # Verify installation
          echo "Verifying ChromeDriver installation..."
          chromedriver --version

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          # Make sure requirements.txt exists and lists selenium
          if [ -f requirements.txt ]; then
             pip install -r requirements.txt
          else
             echo "requirements.txt not found, installing selenium directly"
             pip install selenium
          fi

      - name: Run Automation
        env:
          SAP_USERNAME: ${{ secrets.SAP_USERNAME }}
          SAP_PASSWORD: ${{ secrets.SAP_PASSWORD }}
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          SAP_URL: ${{ secrets.SAP_URL }}
        run: |
          set -x  # Enable detailed logging
          python automation.py || { echo 'Automation script failed'; exit 1; }
