name: SAP Automation (with proof screenshots)

on:
  schedule:
    - cron: "0 * * * *"   # hourly
  workflow_dispatch:

concurrency:
  group: sap-automation-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

env:
  TZ: Asia/Riyadh
  PYTHONUNBUFFERED: "1"

jobs:
  execute-job:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Use stable Google Chrome (not canary) to avoid sporadic Selenium issues
      - name: Set up Chrome (stable)
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
          install-dependencies: true

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
             pip install -r requirements.txt
          else
             pip install selenium
          fi

      - name: Verify required secrets
        env:
          SAP_USERNAME: ${{ secrets.SAP_USERNAME }}
          SAP_PASSWORD: ${{ secrets.SAP_PASSWORD }}
          SAP_URL: ${{ secrets.SAP_URL }}
        run: |
          missing=0
          for v in SAP_USERNAME SAP_PASSWORD SAP_URL; do
            if [ -z "${!v}" ]; then
              echo "::error::Missing required secret: $v"
              missing=1
            fi
          done
          exit $missing

      - name: Prepare folders
        run: mkdir -p artifacts screenshots logs

      - name: Run Automation
        env:
          SAP_USERNAME: ${{ secrets.SAP_USERNAME }}
          SAP_PASSWORD: ${{ secrets.SAP_PASSWORD }}
          SAP_URL: ${{ secrets.SAP_URL }}
          # Optional email (set all to enable):
          EMAIL_SMTP_HOST: ${{ secrets.EMAIL_SMTP_HOST }}
          EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT }}
          SENDER_EMAIL:     ${{ secrets.SENDER_EMAIL }}
          EMAIL_PASSWORD:   ${{ secrets.EMAIL_PASSWORD }}
          RECIPIENT_EMAIL:  ${{ secrets.RECIPIENT_EMAIL }}
          DISPLAY: ":99"
        run: |
          Xvfb :99 -screen 0 1920x1080x24 &
          echo "--- Versions ---"
          python -V
          google-chrome --version || chrome --version || chromium --version
          echo "---------------"
          set -e
          python automation.py 2>&1 | tee logs/run.log

      # ALWAYS upload artifacts so you get the proof screenshots even on success
      - name: Upload artifacts (proof + logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sap-proof
          path: |
            screenshots/**
            artifacts/**
            logs/**
          if-no-files-found: warn
          retention-days: 14
